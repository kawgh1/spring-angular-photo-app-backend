
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ======================================
# = DATA SOURCE
# ======================================

# Connect to heroku ClearDB MySql database
spring.datasource.url=jdbc:mysql://${DBHOSTNAME}/${DBSCHEMA}?reconnect=true
spring.datasource.username=${DBUSERNAME}
spring.datasource.password=${DBPASSWORD}

# Keep connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# =======================================
# JPA / HIBERNATE
# =======================================

# Use spring.jpa.properties.* for Hibernate native properties ( the prefix is
# stripped before adding them to the entity manager)

# Show or not log for each SQL query
spring.jpa.show-sql=false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will automatically update according to java entities found in the project
spring.jpa.hibernate.ddl-auto=update

# Naming Strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

#MySQL DIALECT
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

#Email
spring.mail.host=smtp.gmail.com
spring.mail.port=465
mail.smtp.auth=true
mail.smtp.starttls.enable=true

#spring.mail.username= **full email address here**
spring.mail.username={EMAILUSERNAME}
#spring.mail.password= ** full email password here**
spring.mail.password={EMAILPASSWORD}
spring.mail.protocol=smtps

# Support email
#support.email=** this will be the from email address sent to new users **
support.email={EMAILUSERNAME}


# Testing
#spring.security.user.name=user
#spring.security.user.password=Bcrypt hash of password